program StupidKombat;

uses crt, Player, Types;

const FighterScreenY : integer = 5;

var sprites : TSprites;
var players : array[TSide] of TPlayer;

function calculateDistance : integer;
begin
    calculateDistance := players[Right].GetX - players[Left].GetX - 8;
end;

procedure playSound(tone: integer);
begin
    sound(tone);
    delay(100);
    nosound;
end;

procedure drawFighter(player: TPlayer);
var screenY : integer;
var spriteY : integer;
begin
    screenY := player.GetY;
    gotoxy(player.GetX, screenY);

    for spriteY := low(sprites[player.GetSide][player.GetPose]) to high(sprites[player.GetSide][player.GetPose]) do
    begin
         writeln(sprites[player.GetSide][player.GetPose][spriteY]);
         screenY := screenY + 1;
         gotoxy(player.GetX, screenY);
    end;
end;

procedure drawGameOver;
begin
    gotoxy(10, 11);

    if (players[Left].GetHP <= 0) and (players[Right].GetHP <= 0) then
        writeln ('DRAW!')
    else if players[Left].GetHP <= 0 then
        writeln ('Player 2 wins! FATALITY')
    else if players[Right].GetHP <= 0 then
        writeln ('Player 1 wins! FATALITY')
    else
        writeln ('Goodbye!');

    playSound(500);
end;

procedure drawHeader;
begin
    clrscr;
    writeln('°°°°°°°°°°°°° STUPID KOMBAT °°°°°°°°°°°°°');
    writeln('');
end;

procedure drawHealth;
const HealthBarY = 3;
var i : integer;
begin
    gotoxy(1, HealthBarY);

    for i := 1 to players[Left].GetHP do
        write('Û');

    gotoxy(22 + (20 - players[Right].GetHP), HealthBarY);

    for i := 1 to players[Right].GetHP do
        write('Û');
end;

procedure handleDamage(side: TSide);
label return;
var distance : integer;
var opponentSide : TSide;
begin;
    distance := calculateDistance;

    if distance > 0 then
        goto return;

    if (side = Right) then opponentSide := Left else opponentSide := Right;

    if players[side].GetPose = Punch then
    begin
        players[opponentSide].Damage(1);
        playSound(1000);
    end
    else if players[side].GetPose = Kick then
    begin
        players[opponentSide].Damage(2);
        playSound(2000);
    end;

    return:
end;

procedure initialise;
begin
    players[Left].Init(Idle, Left, 1, FighterScreenY);
    players[Right].Init(Idle, Right, 31, FighterScreenY);

    sprites[Left][Idle][0]     := '   ÚÄÄ¿  ';
    sprites[Left][Idle][1]     := '  ÄÁÄÄÁÄ ';
    sprites[Left][Idle][2]     := '  ( §_§) ';
    sprites[Left][Idle][3]     := '   ( 9 )9';
    sprites[Left][Idle][4]     := '   /   \ ';

    sprites[Left][Punch][0]    := '  ÚÄÄ¿   ';
    sprites[Left][Punch][1]    := ' ÄÁÄÄÁÄ  ';
    sprites[Left][Punch][2]    := ' ( §_§)  ';
    sprites[Left][Punch][3]    := '  ( 9 )-@';
    sprites[Left][Punch][4]    := '  /   \  ';

    sprites[Left][Kick][0]     := '  ÚÄÄ¿   ';
    sprites[Left][Kick][1]     := ' ÄÁÄÄÁÄ  ';
    sprites[Left][Kick][2]     := ' ( §_§)  ';
    sprites[Left][Kick][3]     := '  ( 9 )9 ';
    sprites[Left][Kick][4]     := '  /   îîî';

    sprites[Right][Idle][0]    := '  ÚÄÄ¿   ';
    sprites[Right][Idle][1]    := ' ÄÁÄÄÁÄ  ';
    sprites[Right][Idle][2]    := ' (§_§ )  ';
    sprites[Right][Idle][3]    := '@( @ )   ';
    sprites[Right][Idle][4]    := ' /   \   ';

    sprites[Right][Punch][0]   := '   ÚÄÄ¿  ';
    sprites[Right][Punch][1]   := '  ÄÁÄÄÁÄ ';
    sprites[Right][Punch][2]   := '  (§_§ ) ';
    sprites[Right][Punch][3]   := '@-( @ )  ';
    sprites[Right][Punch][4]   := '  /   \  ';

    sprites[Right][Kick][0]    := '   ÚÄÄ¿  ';
    sprites[Right][Kick][1]    := '  ÄÁÄÄÁÄ ';
    sprites[Right][Kick][2]    := '  (§_§ ) ';
    sprites[Right][Kick][3]    := ' @( @ )  ';
    sprites[Right][Kick][4]    := 'îîî   \  ';

end;

var key : char;
label gameover;
begin
    initialise;

    key := #01; { initialise with non-#00 for the first iteration of repeat }

    repeat
        players[Left].SetPose(Idle);
        players[Right].SetPose(Idle);

        case (key) of
            'Q' : players[Left].SetPose(Punch);
            'E' : players[Left].SetPose(Kick);
            'A' : if players[Left].GetX > 1 then
                      players[Left].SetX(players[Left].GetX - 1);
            'D' : if calculateDistance > 0 then
                      players[Left].SetX(players[Left].GetX + 1);
            '.' : players[Right].SetPose(Punch);
            '-' : players[Right].SetPose(Kick);
            #00 : { arrow keys return #00 before the actual key code }
                case upcase(readkey) of
                    #75 : if calculateDistance > 0 then
                              players[Right].SetX(players[Right].GetX - 1);
                    #77 : if players[Right].GetX < 72 then
                              players[Right].SetX(players[Right].GetX + 1);
                end;
        end;

        drawHeader;
        drawFighter(players[Left]);
        drawFighter(players[Right]);

        handleDamage(Left);
        handleDamage(Right);
        drawHealth;

        if (players[Left].GetHP <= 0) or (players[Right].GetHP <= 0) then
            goto gameover;

        gotoxy(80, 25); {move cursor to lower right corner}
        key := upcase(readkey);
    until key = #27; {Escape}

    gameover:
    drawGameOver;

    repeat
    until readkey = #27;
end.
